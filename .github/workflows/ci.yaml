name: continuos integration

on:
  push:
    branches:
      - feature/deploy-docker
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build with Java
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: database
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Build with Maven
        run: mvn clean install

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: database
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Run Tests
        run: mvn test  

  coverage:
    name: Coverage Tests
    runs-on: ubuntu-latest
    needs: test
    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: database
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Build with Maven and run tests
        run: mvn clean verify

      - name: Extract JaCoCo report
        run: mvn jacoco:report

      - name: Verify Coverage
        run: mvn jacoco:check

  analysis:
    name: Analysis Quality Gate
    runs-on: ubuntu-latest
    needs: test
    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: database
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Integrate with sonarcloud
        run: mvn -B org.jacoco:jacoco-maven-plugin:prepare-agent verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dsonar.projectKey=macgii_Teste-Contas-Bancarias -Dsonar.organization=macgii -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=macgii_Teste-Contas-Bancarias

  docker_build:
    name: Run and Build with Docker
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Dcoker Listing Files and Directories with Detailed Information
        run: ls -a

      - name: Run and Build Containers
        run: |
          docker-compose up -d --build

          # Wait for services to initialize (customize as needed)
          sleep 180

      - name: Show a List of Running Containers
        run: docker ps

      - name: Show a List of All Containers
        run: docker ps -a
      
      - name: Show a List of All Images
        run: docker images

  deploy:
    name: Deploy Dockerhub
    needs: [analysis, coverage, docker_build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Image
        run: docker-compose build

      - name: Show a List of All Images
        run: docker images

      - name: Login Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
        
      - name: Creating a Docker Image Tag for Pushing to Docker Hub
        run: docker tag api-contas-bancarias macgii/api-contas-bancarias

      - name: Show a List of All Images
        run: docker images

      - name: Push the image to Docker Hub
        run: docker push macgii/api-contas-bancarias:latest
