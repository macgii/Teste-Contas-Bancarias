name: continuos integration - sonar cloud

on:
  workflow_call:
  
jobs:
  analysis:
    name: Analysis Quality Gate
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: database
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Build and analyze
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=macgii_Teste-Contas-Bancarias
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq -y

      - name: Extract Quality Gate information
        run: |
          JSON=$(curl -sS -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=macgii_Teste-Contas-Bancarias")

          QUALITY_GATE_STATUS=$(echo "$JSON" | jq -r '.projectStatus.status')
          RELIABILITY=$(echo "$JSON" | jq -r '.projectStatus.conditions[] | select(.metricKey == "new_reliability_rating").status')
          SECURITY=$(echo "$JSON" | jq -r '.projectStatus.conditions[] | select(.metricKey == "new_security_rating").status')
          MAINTAINABILITY=$(echo "$JSON" | jq -r '.projectStatus.conditions[] | select(.metricKey == "new_maintainability_rating").status')
          SECURITY_REVIEW=$(echo "$JSON" | jq -r '.projectStatus.conditions[] | select(.metricKey == "new_security_hotspots_reviewed").status')
          COVERAGE=$(echo "$JSON" | jq -r '.projectStatus.conditions[] | select(.metricKey == "new_coverage").status')
          DUPLICATIONS=$(echo "$JSON" | jq -r '.projectStatus.conditions[] | select(.metricKey == "new_duplicated_lines_density").status')

          if [ "$QUALITY_GATE_STATUS" == "OK" ]; then
            QUALITY_GATE_STATUS="Passed" >> $GITHUB_STEP_SUMMARY
          else
            QUALITY_GATE_STATUS="Failed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "| MÃ©trica            | Status               |" >> $GITHUB_STEP_SUMMARY
          echo "|--------------------|----------------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Quality Gate       | $QUALITY_GATE_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| Reliability        | $RELIABILITY         |" >> $GITHUB_STEP_SUMMARY
          echo "| Security           | $SECURITY            |" >> $GITHUB_STEP_SUMMARY
          echo "| Maintainability    | $MAINTAINABILITY     |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Review    | $SECURITY_REVIEW     |" >> $GITHUB_STEP_SUMMARY
          echo "| Coverage           | $COVERAGE            |" >> $GITHUB_STEP_SUMMARY
          echo "| Duplications       | $DUPLICATIONS        |" >> $GITHUB_STEP_SUMMARY
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check Quality Gate Status and Metrics
        run: |
          JSON=$(curl -sS -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=macgii_Teste-Contas-Bancarias")

          QUALITY_GATE_STATUS=$(echo "$JSON" | jq -r '.projectStatus.status')
          METRICS_PASSED=$(echo "$JSON" | jq -r '.projectStatus.conditions | map(select(.status == "OK") | .metricKey) | join(", ")')
          METRICS_FAILED=$(echo "$JSON" | jq -r '.projectStatus.conditions | map(select(.status == "ERROR") | .metricKey) | join(", ")')

          if [ "$QUALITY_GATE_STATUS" == "ERROR" ]; then
            echo "Quality Gate failed. Status: $QUALITY_GATE_STATUS"
            echo "Metrics Passed: $METRICS_PASSED"
            echo "Metrics Failed: $METRICS_FAILED"
            exit 1
          else
            echo "Quality Gate passed. Status: $QUALITY_GATE_STATUS"
            echo "Metrics Passed: $METRICS_PASSED"
            echo "Metrics Failed: $METRICS_FAILED"
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}